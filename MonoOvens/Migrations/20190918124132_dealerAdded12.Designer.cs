// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonoOvens.Models;

namespace MonoOvens.Migrations
{
    [DbContext(typeof(MonoContext))]
    [Migration("20190918124132_dealerAdded12")]
    partial class dealerAdded12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MonoOvens.Models.AssetCategoryMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetCategory");

                    b.HasKey("Id");

                    b.ToTable("AssetCategory");
                });

            modelBuilder.Entity("MonoOvens.Models.AssetMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetCategory");

                    b.Property<string>("AssetType");

                    b.Property<string>("ControllerType");

                    b.Property<int>("Controllers");

                    b.Property<string>("Format");

                    b.Property<string>("Handed");

                    b.Property<string>("Power");

                    b.Property<string>("PowerConsumption");

                    b.Property<string>("TraySize_inch");

                    b.Property<int>("Trays");

                    b.HasKey("id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("MonoOvens.Models.AssetTypeMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetType");

                    b.HasKey("Id");

                    b.ToTable("AssetType");
                });

            modelBuilder.Entity("MonoOvens.Models.ClientMaster", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area");

                    b.Property<string>("City");

                    b.Property<string>("ClientName");

                    b.Property<string>("HOAddress1");

                    b.Property<string>("HOAddress2");

                    b.Property<string>("HOAddress3");

                    b.Property<int>("Postcode");

                    b.Property<string>("PrimaryContactName");

                    b.Property<string>("PrimaryContactNumber");

                    b.Property<string>("PrimaryEmail");

                    b.Property<string>("Region");

                    b.Property<string>("StoreAddress1");

                    b.Property<string>("StoreAddress2");

                    b.Property<string>("StoreCode");

                    b.Property<string>("StoreName");

                    b.Property<string>("StorePostcode");

                    b.Property<string>("Type");

                    b.Property<string>("Zone");

                    b.HasKey("ClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("MonoOvens.Models.ControllerModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ControllerDate");

                    b.Property<string>("FirmwareVersion");

                    b.Property<string>("RecipeVersion");

                    b.Property<bool>("RemoteKill");

                    b.Property<decimal>("SerialNumber");

                    b.Property<TimeSpan?>("SevenDayTimer");

                    b.Property<string>("Skins");

                    b.Property<string>("SleepDelay");

                    b.Property<string>("SoftwareVersion");

                    b.Property<bool?>("Status");

                    b.Property<string>("Wallpaper");

                    b.HasKey("Id");

                    b.ToTable("Controller");
                });

            modelBuilder.Entity("MonoOvens.Models.ControllerTypeMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ControllerType");

                    b.HasKey("Id");

                    b.ToTable("ControllerType");
                });

            modelBuilder.Entity("MonoOvens.Models.DealerMaster", b =>
                {
                    b.Property<int>("DealerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DealerAddressLine1");

                    b.Property<string>("DealerAddressLine2");

                    b.Property<string>("DealerArea");

                    b.Property<string>("DealerCity");

                    b.Property<string>("DealerCountry");

                    b.Property<string>("DealerEmail");

                    b.Property<string>("DealerName");

                    b.Property<decimal?>("DealerPhone");

                    b.Property<string>("DealerState");

                    b.HasKey("DealerId");

                    b.ToTable("Dealers");
                });

            modelBuilder.Entity("MonoOvens.Models.Manufacturer", b =>
                {
                    b.Property<string>("ManufacturerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SupAddressLine1");

                    b.Property<string>("SupAddressLine2");

                    b.Property<string>("SupArea");

                    b.Property<string>("SupCity");

                    b.Property<string>("SupEmail");

                    b.Property<string>("SupName");

                    b.Property<decimal?>("SupPhone");

                    b.Property<string>("SupState");

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturer");
                });

            modelBuilder.Entity("MonoOvens.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClientId");

                    b.Property<string>("DealerId");

                    b.Property<string>("ManufacturerId");

                    b.Property<DateTime>("OrderDate");

                    b.Property<string>("OrderedQuantity");

                    b.Property<string>("ProductId");

                    b.Property<string>("ShippedDate");

                    b.Property<string>("ShippedQuantity");

                    b.HasKey("OrderId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("MonoOvens.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("InverseManufacturerProductId");

                    b.Property<string>("ManufacturerId");

                    b.Property<string>("ProductCategoryId");

                    b.Property<string>("ProductDescription");

                    b.Property<string>("ProductSubCategoryId");

                    b.Property<string>("ProductTypeId");

                    b.HasKey("ProductId");

                    b.HasIndex("InverseManufacturerProductId")
                        .IsUnique()
                        .HasFilter("[InverseManufacturerProductId] IS NOT NULL");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MonoOvens.Models.UserMaster", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<DateTime>("Birthdate");

                    b.Property<string>("City");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Designation");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("EmployeeId");

                    b.Property<string>("Gender");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("Password");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MonoOvens.Models.Product", b =>
                {
                    b.HasOne("MonoOvens.Models.Product", "InverseManufacturer")
                        .WithOne("Manufacturer")
                        .HasForeignKey("MonoOvens.Models.Product", "InverseManufacturerProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
