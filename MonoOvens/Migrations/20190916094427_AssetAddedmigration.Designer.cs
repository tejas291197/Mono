// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonoOvens.Models;


namespace MonoOvens.Migrations
{
    [DbContext(typeof(MonoContext))]
    [Migration("20190916094427_AssetAddedmigration")]
    partial class AssetAddedmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MonoOvens.Models.AssetMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetCategory");

                    b.Property<string>("AssetType");

                    b.Property<string>("ControllerType");

                    b.Property<int>("Controllers");

                    b.Property<string>("Format");

                    b.Property<string>("Handed");

                    b.Property<string>("Power");

                    b.Property<string>("PowerConsumption");

                    b.Property<string>("TraySize_inch");

                    b.Property<int>("Trays");

                    b.HasKey("id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("MonoOvens.Models.Client", b =>
                {
                    b.Property<string>("ClientId")
                        .HasMaxLength(10);

                    b.Property<string>("Area")
                        .HasMaxLength(10);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("ClientAddressLine1")
                        .HasColumnName("ClientAddressLine_1")
                        .HasMaxLength(10);

                    b.Property<string>("ClientAddressLine2")
                        .HasColumnName("ClientAddressLine_2")
                        .HasMaxLength(10);

                    b.Property<string>("ClientAddressLine3")
                        .HasColumnName("ClientAddressLine_3")
                        .HasMaxLength(10);

                    b.Property<string>("DelearId")
                        .HasColumnName("DelearID")
                        .HasMaxLength(10);

                    b.Property<string>("HomePostcode")
                        .HasMaxLength(10);

                    b.Property<string>("PostTown")
                        .HasMaxLength(10);

                    b.Property<string>("PrimaryContactName")
                        .HasMaxLength(10);

                    b.Property<string>("PrimaryContactNumber")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("PrimaryEmail")
                        .HasMaxLength(10);

                    b.Property<string>("Region")
                        .HasMaxLength(10);

                    b.Property<string>("StoreAddressLine1")
                        .HasColumnName("StoreAddressLine_1")
                        .HasMaxLength(10);

                    b.Property<string>("StoreAddressLine2")
                        .HasColumnName("StoreAddressLine_2")
                        .HasMaxLength(10);

                    b.Property<string>("StoreName")
                        .HasMaxLength(10);

                    b.Property<string>("StorePostcode")
                        .HasMaxLength(10);

                    b.Property<string>("Storecode")
                        .HasMaxLength(10);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Zone")
                        .HasMaxLength(10);

                    b.HasKey("ClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("MonoOvens.Models.ControllerModule", b =>
                {
                    b.Property<decimal>("SerialNumber")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<DateTime?>("ControllerDate");

                    b.Property<string>("FirmwareVersion")
                        .HasMaxLength(10);

                    b.Property<string>("RecipeVersion")
                        .HasMaxLength(10);

                    b.Property<bool>("RemoteKill");

                    b.Property<TimeSpan?>("SevenDayTimer");

                    b.Property<string>("Skins")
                        .HasMaxLength(10);

                    b.Property<string>("SleepDelay")
                        .HasMaxLength(10);

                    b.Property<string>("SoftwareVersion")
                        .HasMaxLength(10);

                    b.Property<bool?>("Status");

                    b.Property<string>("Wallpaper")
                        .HasColumnName("wallpaper")
                        .HasMaxLength(10);

                    b.Property<DateTime>("dateTime");

                    b.HasKey("SerialNumber");

                    b.ToTable("ControllerModule");
                });

            modelBuilder.Entity("MonoOvens.Models.Dealer", b =>
                {
                    b.Property<string>("DealerId")
                        .HasMaxLength(10);

                    b.Property<string>("DealerAddressLine1")
                        .HasColumnName("Dealer_AddressLine1")
                        .HasMaxLength(10);

                    b.Property<string>("DealerAddressLine2")
                        .HasColumnName("Dealer_AddressLine2")
                        .HasMaxLength(10);

                    b.Property<string>("DealerArea")
                        .HasColumnName("Dealer_Area")
                        .HasMaxLength(10);

                    b.Property<string>("DealerCity")
                        .HasColumnName("Dealer_City")
                        .HasMaxLength(10);

                    b.Property<string>("DealerCountry")
                        .HasColumnName("Dealer_Country")
                        .HasMaxLength(10);

                    b.Property<string>("DealerEmail")
                        .HasColumnName("Dealer_Email");

                    b.Property<string>("DealerName")
                        .HasColumnName("Dealer_Name")
                        .HasMaxLength(10);

                    b.Property<decimal?>("DealerPhone")
                        .HasColumnName("Dealer_Phone")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("DealerState")
                        .HasColumnName("Dealer_State")
                        .HasMaxLength(10);

                    b.HasKey("DealerId");

                    b.ToTable("Dealer");
                });

            modelBuilder.Entity("MonoOvens.Models.Manufacturer", b =>
                {
                    b.Property<string>("ManufacturerId")
                        .HasMaxLength(10);

                    b.Property<string>("SupAddressLine1")
                        .HasColumnName("Sup_AddressLine1")
                        .HasMaxLength(50);

                    b.Property<string>("SupAddressLine2")
                        .HasColumnName("Sup_AddressLine2")
                        .HasMaxLength(50);

                    b.Property<string>("SupArea")
                        .HasColumnName("Sup_Area")
                        .HasMaxLength(10);

                    b.Property<string>("SupCity")
                        .HasColumnName("Sup_City")
                        .HasMaxLength(10);

                    b.Property<string>("SupEmail")
                        .HasColumnName("Sup_Email")
                        .HasMaxLength(50);

                    b.Property<string>("SupName")
                        .HasColumnName("Sup_Name")
                        .HasMaxLength(10);

                    b.Property<decimal?>("SupPhone")
                        .HasColumnName("Sup_Phone")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("SupState")
                        .HasColumnName("Sup_State")
                        .HasMaxLength(10);

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturer");
                });

            modelBuilder.Entity("MonoOvens.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(10);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("DealerId")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("ManufacturerId")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("OrderDate");

                    b.Property<string>("OrderedQuantity")
                        .HasMaxLength(10);

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("ShippedDate")
                        .HasMaxLength(10);

                    b.Property<string>("ShippedQuantity")
                        .HasMaxLength(10);

                    b.HasKey("OrderId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("MonoOvens.Models.Product", b =>
                {
                    b.Property<string>("ManufacturerId")
                        .HasMaxLength(10);

                    b.Property<string>("ProductCategoryId")
                        .HasMaxLength(10);

                    b.Property<string>("ProductDescription")
                        .HasMaxLength(50);

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("ProductSubCategoryId")
                        .HasMaxLength(10);

                    b.Property<string>("ProductTypeId")
                        .HasMaxLength(10);

                    b.HasKey("ManufacturerId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MonoOvens.Models.Product", b =>
                {
                    b.HasOne("MonoOvens.Models.Product", "Manufacturer")
                        .WithOne("InverseManufacturer")
                        .HasForeignKey("MonoOvens.Models.Product", "ManufacturerId")
                        .HasConstraintName("FK_Product_Product");
                });
#pragma warning restore 612, 618
        }
    }
}
